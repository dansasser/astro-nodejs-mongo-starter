---
interface Props {
   id: string
   title: string
   desc: string
   price: number
   stars: number
}

const { id, title, desc, stars, price } = Astro.props
const starCount = (number: number) => [...Array(number).keys()]

const starMap = {
   yellowStars: starCount(stars),
   greyStars: starCount(5 - stars)
}
const star = <T extends string>(color: T): string => {
   return `<svg
               class='w-4 h-4 ${color}'
               
               aria-hidden='true'
               xmlns='http://www.w3.org/2000/svg'
               fill='currentColor'
               viewBox='0 0 22 20'
            >
               <path
                  d='M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z'
               ></path>
            </svg>`
}
---

<div
   data-href={id}
   id={`${id}_card`}
   class:list={[
      'card',
      'max-w-sm',
      'image-full',
      'w-[200px]',
      'overflow-hidden',
      'cursor-pointer'
   ]}
>
   {/* Card Image */}
   <figure>
      <img
         class:list={['p-8', 'rounded-t-lg']}
         src='https://citypackz.com/images/pokemon/charizard_pokemon_celebrations_15/125/'
         alt={title}
      />
   </figure>
   {/* Card Body */}
   <div class:list={['card-body']}>
      <h5
         class:list={[
            'text-lg',
            'font-semibold',
            'tracking-tight',
            'card-title'
         ]}
      >
         {/* Card Title */}
         {title}
      </h5>
      <p class:list={['text-md', 'font-semibold', 'tracking-tight']}>
         {/* Card Description */}
         {desc}
      </p>
      {/* Star Rating */}
      <div class:list={['flex', 'items-center', 'mt-2.5', 'mb-5']}>
         <div
            class:list={[
               'flex',
               'items-center',
               'space-x-1',
               'rtl:space-x-reverse'
            ]}
         >
            {
               starMap.yellowStars.map((item): string => (
                  <Fragment set:html={star<string>('text-yellow-300')} />
               ))
            }
            {
               starMap.greyStars.map((item): string => (
                  <Fragment set:html={star<string>('text-white')} />
               ))
            }
         </div>
         <span
            class:list={[
               'bg-blue-100',
               'text-blue-800',
               'text-xs',
               'font-semibold',
               'px-2.5',
               'py-0.5',
               'rounded',
               'dark:bg-blue-200',
               'dark:text-blue-800',
               'ms-3'
            ]}>{stars}.0</span
         >
      </div>
      <div class:list={['justify-end', 'card-actions']}>
         {/* Card Price */}
         <div
            class:list={[
               'text-sm',
               'px-2.5',
               'py-0.5',
               'font-bold',
               'text-neutral',
               'rounded',
               'font-semibold',
               'p-2',
               'bg-[rgba(255,255,255,.9)]',
               'inline-block',
               'ms-3'
            ]}
         >
            ${price}
         </div>
         {
            /*
         <!-- Add to cart button -->
         <a
            href={href}
            class:list={[
               'btn',
               'btn-primary',
               'focus:ring-4',
               'focus:outline-none',
               'font-medium',
               'rounded-lg',
               'text-sm',
               'px-5',
               'py-2.5',
               'text-center'
            ]}
            >Add to cart</a
         >
         */
         }
      </div>
   </div>
</div>
